#here comes the site specific configuration data

[main]
sigiHomeini=installed

debugLevelCRITICAL = 50
debugLevelERROR = 40
defaultServer = kellerraspi:8000
connectedsServers= kellerraspi:8000, zaehlerraspi:8000, raspi:8000
json_Schalter = ["SchwimmSolar", "SchwimmFilter", "Warmwasser 1", "Warmwasser 2", "Warmwasser 3", "digital 6", "Dose", "nCharge"]
debugLevelWARNING = 30
debugLevel = 30
json_Devicenames = ["PV1"]
logfilename = /var/log/pvOpt.log
debugLevelDEBUG = 10
DeviceSchalter = kellerschalter
configfilename = /etc/pvOpt.ini
debugLevelINFO = 20
archiveServer = archiveraspi:8001
archiveext = .pvOpt
archivepath = /var/archive/
#in bytes:
archiveSplit = 1000000
homeMatic =192.168.0.189


[COSEM]
AUTH=C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
ENC=4A614E645267556B586E327235753878

[MQTT]
broker=raspi
#defaultQoS=2

[MQTT_raspi]
subscribe=JSON:["tele/+/LWT", "prusa/mqtt"]

#transform 
# see https://docs.python.org/3/howto/regex.html#modifying-strings (re.sub)
# rule = pattern, replacement string, [:valuepattern, valuereplacementstring:] nextRule (if pattern matches)
[transform]
rootWrite=JSON:{"nextRule":["tasmotaW"]}

#---------------------
tasmotaW=JSON:{
    "dp":["TASMOTA/(.*)", "MQTT/\\1"], 
    "reverse":"tasmotaWReverse", 
    "nextRule":["tasmotaWPower"]}

tasmotaWPower=JSON:{
    "dp":["MQTT/(.*)/POWER(.*)","MQTT/cmnd/\\1/POWER\\2"], 
    "value":[["0","OFF"], ["1","ON"]], 
    "reverse":"tasmotaWPowerReverse"}
    
tasmotaWReverse=JSON:{
    "dp":["MQTT/(.*)", "TASMOTA/\\1"]}

tasmotaWPowerReverse=JSON:{
    "dp":["MQTT/cmnd/(.*)/POWER(.*)","MQTT/\\1/POWER\\2"], 
    "value":[["OFF","0"], ["ON","1"]]
    }
#-----------------

rootRead=JSON:{"nextRule":["tasmotaR"]}

tasmotaR=JSON:{
    "dp":["TASMOTA/(.*)", "MQTT/\\1"], 
    "reverse":"tasmotaRReverse", 
    "nextRule":["tasmotaRPower"]}
    
tasmotaRPower= JSON:{
    "dp":["MQTT/(.*)/POWER(.*)","MQTT/stat/\\1/POWER\\2"],
    "reverse":"tasmotaRPowerReverse"}

tasmotaRPowerReverse=JSON:{
    "dp":["MQTT/stat/(.*)/POWER(.*)","MQTT/\\1/POWER\\2"], 
    "value":[["OFF","0"], ["ON","1"]]
    }
    
tasmotaRReverse=JSON:{
    "dp":["MQTT/(.*)", "TASMOTA/\\1"]}

invert=JSON:{
    "dp":["krawutzkaputzi",""], 
    "value":[["0","1"], ["1","0"]], 
    "reverse":"invert", 
    "nextRule":""}
    
#Tasmota commands: https://github.com/arendst/Sonoff-Tasmota/wiki/Commands
    

    

[Tempsensors]
#00042cb4d4ff = _Wohnzimmer
#00042d9aabff = _Draussen
#00042b8679ff = _BoilerTemp_oben
#00042b868bff = _BoilerTemp_unten
#00042d9bdaff = _BoilerTemp_mitte
#00042cb564ff = _PoolVor
#00042e5891ff = _PoolRueck
#00042d4001ff = _KollektorVor
#0004335731ff = _KollektorRueck

[Alias]
PVSauna = PV/PV1
SchwimmFilter = ETH/kellerschalter/2
DraussenTemp = TEMP/00042d9aabff
SchwimmSolar = ETH/kellerschalter/1
MinerStrom = ETH/kellerschalter/6
Automatisch = ETH/kellerschalter/7
Beat = ETH/kellerschalter/8
BoilerTemp1 = TEMP/00042b8679ff
BoilerTemp2 = TEMP/00042d9bdaff
BoilerTemp3 = TEMP/00042b868bff
Warmwasser 1 = ETH/kellerschalter/3
Warmwasser 2 = ETH/kellerschalter/4
Warmwasser 3 = ETH/kellerschalter/5
PVTotal = COMP/PVTotal/p[0]+p[1]/"BX/BATTERX/1634", "PV/PV1"
ZAEHLERBILANZ = COMP/Bilanz/p[0]-p[1]/"ALIAS/PBEZUG", "ALIAS/PEINSP"
ENERGIEBEZUG = DLMS/ttyUSB.irKopf/1.8.0
ENERGIEEINSP = DLMS/ttyUSB.irKopf/2.8.0
PBEZUG = DLMS/ttyUSB.irKopf/1.7.0
PEINSP = DLMS/ttyUSB.irKopf/2.7.0

WohnzimmerTemp = TEMP/00042cb4d4ff
PVHaus=BX/BATTERX/1634


[METADATA]
#additional data for datapoints
# nameWithoutModule=Description, Unit, dataType
# datatype can be , float, int, string (or python datatype?)
#
HEALTH/CPU=CPU Usage,%%, int
HEALTH/DISK/DISKS=List of Mountpoints,, string
HEALTH/DISK/FREE=Disk free,MB, float
HEALTH/DISK/PERCENT=Disk used,%%, float
HEALTH/DISK/TOTAL=Disk total,MB, float
HEALTH/DISK/USED=Disk used,MB, float
HEALTH/RAM=RAM free,%%, int
HEALTH/RAM/FREE=RAM free,MB, int
HEALTH/PROC=Process,, string
HEALTH/FILE/DESC=File descriptors,, int
HEALTH/FILE/FILES=Files,, string
HEALTH/UPTIME/Z=Uptime ZR,s, int
HEALTH/UPTIME/K=Uptime KR,s, int
HEALTH/UPTIME/R=Uptime raspi,s, int
HEALTH/UPTIME/R4=Uptime raspi4,s, int
HEALTH/UPTIMESERVICE/Z=Uptime server ZR,s, int
HEALTH/UPTIMESERVICE/K=Uptime server KR,s, int
HEALTH/UPTIMESERVICE/R=Uptime server raspi,s, int
HEALTH/UPTIMESERVICE/R4=Uptime server raspi4,s, int

VAR/mainMessage/text =Text, ,string
VAR/evStatus/text =EV-Status, ,string

VAR/TimerLastRun/minutes = "Letzter Aufruf Minutentimer", UHR, datetime
VAR/ZAEHLERBILANZ=Bezugsbilanz,kW, float
ALIAS/ZAEHLERBILANZ=Bezugsbilanz,kW, float
VAR/VERBRAUCH=Verbrauch,kW, float

VAR/AUTOBOILER=Automatik Boiler, ,int
VAR/BUTTON1=Button1, ,int
VAR/BUTTON2=Button2, ,int
VAR/BUTTON3=Button3, ,int
VAR/AUTOBODEN=Automatik Boden, ,int
VAR/LIFECYCLE=Lifecycle, ,int

VAR/test="die halbe Wahrheit ist", keineEinheit, int

ETH/Wohnzimmer=WohnzimmerSchalter, , int
ETH/Kueche=KuechenSchalter, , int
ETH/Kueche/A4=Schalter Kueche unten,ADC, int
ETH/Kueche/A3=HeizungsPumpe,ADC, int
ETH/Kueche/A2=Pumpe Warmwasser,ADC, int
ETH/Kueche/A1=Heizungsbrenner,ADC, int
ETH/Kellerschalter=KellerSchalter, , int
ETH/kellerschalter=KellerSchalter, , int
ETH/keller2=Keller2, , int
ETH/keller2/13=Hochbeet Ein, , int
ETH/keller2/14=Hochbeet Aus, , int
ETH/keller2/15=Buesche Ein, , int
ETH/keller2/16=Buesche Aus, , int
ETH/keller2/A0=Garage1Offen,ADCDIG, int
ETH/keller2/A1=Garage1Zu,ADCDIG, int
ETH/keller2/A2=Garage2Offen,ADCDIG, int
ETH/keller2/A3=Garage2Zu,ADCDIG, int
ETH/keller2/A7=SolarPumpe,ADC, int


ETH/Wohnzimmer/V=WohnzimmerSchalter Spannung,V, float
ETH/Kueche/V=KuechenSchalter Spannung,V, float
ETH/Kellerschalter/V=KellerSchalter Spannung,V, float

#-----------------------------------------------------
#metadaten fuer schalter sind wichtig, da sie invertieren koennen:
ETH/zaehlerschalter/1=Phase 1, n,bool
ETH/zaehlerschalter/2=Phase 2, n,bool
ETH/zaehlerschalter/3=Phase 3, n,bool
ETH/zaehlerschalter/4=K&uuml;che Dosen L&uuml;fter (3), n,bool
ETH/zaehlerschalter/5=K&uuml;che &Ouml;fen (3), n,bool
ETH/zaehlerschalter/6=Drehstrom Keller, n,bool
ETH/zaehlerschalter/7=na,n,bool
ETH/zaehlerschalter/8=na,n,bool
ETH/zaehlerschalter/9=Wama, Tiefk, Sprech(1),n,bool
ETH/zaehlerschalter/10=Heizung (1),n,bool
ETH/zaehlerschalter/11=Keller, Gara (2),n,bool
ETH/zaehlerschalter/12=Sauna,n,bool
ETH/zaehlerschalter/13=Ganglicht K&uuml; K&uuml;hlschrank,n,bool
ETH/zaehlerschalter/14=Schlafz Sigi Schrankr (1),n,bool
ETH/zaehlerschalter/15=Yogazimmer Bad Gang oben (1),n,bool
ETH/zaehlerschalter/16=Bad unten, Edda,n,bool
ETH/zaehlerschalter/17=Wohnzimmer,n,bool
ETH/zaehlerschalter/18=na,n,bool
ETH/zaehlerschalter/19=Leinwand on, ,
ETH/zaehlerschalter/20=Leinwand runter, ,

ETH/wohnzimmer/18=SAT receiver,n,bool
ETH/wohnzimmer/19=Yamaha + Fernseher,n,bool
ETH/wohnzimmer/20=Subwoofer,n,bool


#-----------------------------------------------------
MOD/ttyUSB0/2/ZAEHLER/P1Power=BattInput Phase 1, , float
MOD/ttyUSB0/2/ZAEHLER/P2Power=BattInput Phase 2, , float
MOD/ttyUSB0/2/ZAEHLER/P3Power=BattInput Phase 3, , float
MOD/ttyUSB0/2/ZAEHLER/SystemPower=BattInput Total, , float
MOD/ttyUSB0/2/ZAEHLER/ImportWh=BattInput Import, , float
MOD/ttyUSB0/2/ZAEHLER/ExportWh=BattInput Export, , float

MOD/ttyUSB0/3/ZAEHLER/P1Power=GarageDrehstrom Phase 1, , float
MOD/ttyUSB0/3/ZAEHLER/P2Power=GarageDrehstrom Phase 2, , float
MOD/ttyUSB0/3/ZAEHLER/P3Power=GarageDrehstrom Phase 3, , float
MOD/ttyUSB0/3/ZAEHLER/SystemPower=GarageDrehstrom Total, , float
MOD/ttyUSB0/3/ZAEHLER/ImportWh=GarageDrehstrom Import, , float
MOD/ttyUSB0/3/ZAEHLER/ExportWh=GarageDrehstrom Export, , float


MOD/ttyUSB.modbus/2/ZAEHLER/P1Power=HausZaehler Phase 1, , float
MOD/ttyUSB.modbus/2/ZAEHLER/P2Power=HausZaehler Phase 2, , float
MOD/ttyUSB.modbus/2/ZAEHLER/P3Power=HausZaehler Phase 3, , float
MOD/ttyUSB.modbus/2/ZAEHLER/SystemPower=HausZaehler Total, , float
MOD/ttyUSB.modbus/2/ZAEHLER/ImportWh=HausZaehler Energie Import, , float
MOD/ttyUSB.modbus/2/ZAEHLER/ExportWh=HausZaehler Energie Export, , float

MOD/ttyUSB0/10/SDM120/ImportWh=KellerDose Energie, , float
MOD/ttyUSB0/10/SDM120/Power=KellerDose, , float

MOD/ttyUSB0/19/SDM120/ImportWh=Miner Energie, , float
MOD/ttyUSB0/19/SDM120/Power=Miner, , float

MOD/ttyUSB.modbus/10/SDM120/ImportWh=Garage Energie, , float
MOD/ttyUSB.modbus/10/SDM120/Power=Garage, , float
MOD/ttyUSB.modbus/11/SDM120/ImportWh=Heizung Energie, , float
MOD/ttyUSB.modbus/11/SDM120/Power=Heizung, , float
MOD/ttyUSB.modbus/12/SDM120/ImportWh=Tiefk Wama Sprech, , float
MOD/ttyUSB.modbus/12/SDM120/Power=Tiefk Wama Sprech, , float
MOD/ttyUSB.modbus/13/SDM120/ImportWh=Kueche Dose Energie, , float
MOD/ttyUSB.modbus/13/SDM120/Power=Kueche Dose, , float
MOD/ttyUSB.modbus/14/SDM120/ImportWh=Wohnzi Energie, , float
MOD/ttyUSB.modbus/14/SDM120/Power=Wohnzi, , float
MOD/ttyUSB.modbus/15/SDM120/ImportWh=Bad U Edda Energie, , float
MOD/ttyUSB.modbus/15/SDM120/Power=Bad U Edda, , float
MOD/ttyUSB.modbus/16/SDM120/ImportWh=Bad O Gang Energie, , float
MOD/ttyUSB.modbus/16/SDM120/Power=Bad O Gang, , float
MOD/ttyUSB.modbus/17/SDM120/ImportWh=Schlafz Sigi Energie, , float
MOD/ttyUSB.modbus/17/SDM120/Power=Schlafz Sigi, , float
MOD/ttyUSB.modbus/18/SDM120/ImportWh=KUEHL Kueche Gang Energie, , float
MOD/ttyUSB.modbus/18/SDM120/Power=KUEHL Kueche Gang, , float
MOD/ttyUSB.modbus/19/SDM120/ImportWh=Batterie Energie, Wh , float
MOD/ttyUSB.modbus/19/SDM120/Power=Batterie, W , float


#---------------------------------------------
# Leistungsmessungen der Einzelschalter
VAR/Leistung/ETH/kellerschalter/1 = Leistung Schwimmsolar, W ,float
VAR/Leistung/ETH/kellerschalter/2 = Leistung SchwimmFilter, W ,float
VAR/Leistung/ETH/kellerschalter/3 = Leistung Warmwasser 1, W ,float
VAR/Leistung/ETH/kellerschalter/4 = Leistung Warmwasser 2, W ,float
VAR/Leistung/ETH/kellerschalter/5 = Leistung Warmwasser 3, W ,float
VAR/Leistung/ETH/kellerschalter/6 = Leistung Keller 6, W ,float
#VAR/Leistung/ETH/kellerschalter/7 = Leistung Keller Dose 7, W ,float
VAR/Leistung/ETH/kellerschalter/8 = Leistung Keller Dose 8, W ,float

VAR/Leistung/ETH/kueche/13 = Leistung Fussboden 13, W ,float
VAR/Leistung/ETH/kueche/14 = Leistung Fussboden 14, W ,float
VAR/Leistung/ETH/kueche/15 = Leistung Fussboden 15, W ,float
VAR/Leistung/ETH/kueche/16 = Leistung Fussboden 16, W ,float
VAR/Leistung/ETH/kueche/17 = Leistung Fussboden 17, W ,float
VAR/Leistung/ETH/kueche/18 = Leistung Fussboden 18, W ,float
VAR/Leistung/ETH/kueche/19 = Leistung Fussboden 19, W ,float
VAR/Leistung/ETH/kueche/20 = Leistung Fussboden 20, W ,float

VAR/POOLTEMP = PoolTemp, Grad, float

VAR/Leistung/ETH/wohnzimmer/17=Leistung Wohnzimmerlicht 17, W ,float
TEMP/00042cb4d4ff = Wohnzimmer, Grad, float
TEMP/00042d9aabff = Draussen, Grad, float
TEMP/00042b8679ff = BoilerTemp_oben, Grad, float
TEMP/00042b868bff = BoilerTemp_unten, Grad, float
TEMP/00042d9bdaff = BoilerTemp_mitte, Grad, float
TEMP/00042cb564ff = PoolVor, Grad, float
TEMP/00042e5891ff = PoolRueck, Grad, float
TEMP/00042d4001ff = KollektorVor, Grad, float
TEMP/0004335731ff = KollektorRueck, Grad, float

MQTT/stat/SigiStrom/POWER@raspi=Strom im Sigizimmer,n,bool
MQTT/wasser/main/value=Wasserzaehler,m3,float
MQTT/teslamate/cars/1/usable_battery_level=Tesla SOC, %, int

[ETH/kellerschalter/1]
#compress to only changes
compress=1

[ETH/kellerschalter/2]
#compress to only changes
compress=1

[ETH/kellerschalter/3]
#compress to only changes
compress=1

[ETH/kellerschalter/4]
#compress to only changes
compress=1

[ETH/kellerschalter/5]
#compress to only changes
compress=1

[ETH/kellerschalter/6]
#compress to only changes
compress=1

[ETH/kellerschalter/7]
#compress to only changes
compress=1

[ETH/kellerschalter/8]
#compress to only changes
compress=1

[VAR/ZAEHLERBILANZ]
compress=0.01

[ETH/kellerschalter]
#compress to only changes
compress=1

[TEMP/00042b8679ff]
compress=0.0001

[TEMP/00042b868bff]
compress=0.0001

[TEMP/00042cb4d4ff]
compress=0.0001

[TEMP/00042d9aabff]
compress=0.0001

[TEMP/00042d9bdaff]
compress=0.0001


[MOD/ttyUSB0]
timeout=0.5
baudrate=2400

[MOD/ttyUSB1]
timeout=0.5
baudrate=2400

[MOD/ttyUSB2]
timeout=0.5
baudrate=2400



[MOD/ttyUSB.irKopf]
timeout=0.1
baudrate=2400

[MOD/ttyUSB.modbus]
timeout=1.0
baudrate=2400

[MOD/ttyUSB.modbus2]
#8n1 is default
timeout=0.5
baudrate=2400



[MOD/SDM120]
#modbus command, registerID, len, type, unit
Volt=4,0,2,FLOAT,V
Amps=4,6,2,FLOAT,A
Power=4,12,2,FLOAT,W
VoltAmps=4,18,2,FLOAT,VA
VoltAmpsReact=4,24,2,FLOAT,VAr
Powerfactor=4,30,2,FLOAT,-
Frequency=4,70,2,FLOAT,Hz
ImportWh=4,72,2,FLOAT,kWh
ExportWh=4,74,2,FLOAT,kWh
TotalWh=4,342,2,FLOAT,kWh

#Function code 10 to set holding parameter ,function code 03 to read holding parameter 
MeterNumber=3,62976,1,INT
MeterID=3,20,2,FLOAT, 
BaudRate=3,28,2,FLOAT, 
#turns ist in BCD!
turns=3,63744,1,INT, 
pulse1o=3,63760,1,INT, 
measMode=3,63776,1,INT, 
pulse1Mode=3,63792,1,INT, 

[MOD/ZAEHLER]
#modbus command, registerID, len, type, unit
P1Volt=4,0,2,FLOAT,V
P2Volt=4,2,2,FLOAT,V
P3Volt=4,4,2,FLOAT,V
P1Amps=4,6,2,FLOAT,A
P2Amps=4,8,2,FLOAT,A
P3Amps=4,10,2,FLOAT,A
P1Power=4,12,2,FLOAT,W
P2Power=4,14,2,FLOAT,W
P3Power=4,16,2,FLOAT,W
P1VoltAmps=4,18,2,FLOAT,VA
P2VoltAmps=4,20,2,FLOAT,VA
P3VoltAmps=4,22,2,FLOAT,VA
P1VoltAmpsReact=4,24,2,FLOAT,VAr
P2VoltAmpsReact=4,26,2,FLOAT,VAr
P3VoltAmpsReact=4,28,2,FLOAT,VAr
P1Powerfact=4,30,2,FLOAT,-
P2Powerfact=4,32,2,FLOAT,-
P3Powerfact=4,34,2,FLOAT,- 
P1Angle=4,36,2,FLOAT,Grad
P2Angle=4,38,2,FLOAT,Grad
P3Angle=4,40,2,FLOAT,Grad
AverageVolt=4,42,2,FLOAT,V
AverageAmps=4,46,2,FLOAT,A
SumAmps=4,48,2,FLOAT,A
SystemPower=4,52,2,FLOAT,W
SystemVoltAmps=4,56,2,FLOAT,VA
SystemVAr=4,60,2,FLOAT,VAr
SystemPowerfactor=4,62,2,FLOAT,
SystemPhaseAngle=4,66,2,FLOAT,Grad
FrequencySupVol=4,70,2,FLOAT,Hz
ImportWh=4,72,2,FLOAT,kWh
ExportWh=4,74,2,FLOAT,kWh
ImportVArh=4,76,2,FLOAT,kWh
ExportVArh=4,78,2,FLOAT,kWh
VAh=4,80,2,FLOAT,kVAh
Ah=4,82,2,FLOAT,Ah
SystemPowerDem=4,84,2,FLOAT,W
MaxSystemPowerDem=4,86,2,FLOAT,W
SystemVADem=4,100,2,FLOAT,VA
MaxSystemVADem=4,102,2,FLOAT,VA
NeutCurDem=4,104,2,FLOAT,A
MaxNeutCurDem=4,106,2,FLOAT,A
L1L2Volt=4,200,2,FLOAT,V
L2L3Volt=4,202,2,FLOAT,V
L3L1Volt=4,204,2,FLOAT,V
AverageLtLVolt=4,206,2,FLOAT,V
NeutCur=4,224,2,FLOAT,A
P1LNVoltTHD=4,234,2,FLOAT,%%
P2LNVoltTHD=4,236,2,FLOAT,%%
P3LNVoltTHD=4,238,2,FLOAT,%%
P1CurTHD=4,240,2,FLOAT,%%
P2CurTHD=4,242,2,FLOAT,%%
P3CurTHD=4,244,2,FLOAT,%%
AverageLNVoltTHD=4,248,2,FLOAT,%%
AverageLCurTHD=4,250,2,FLOAT,%%
TotSystemPowerfact=4,254,2,FLOAT,Grad
P1CurDem=4,258,2,FLOAT,A
P2CurDem=4,260,2,FLOAT,A
P3CurDem=4,262,2,FLOAT,A
MaxP1CurDem=4,264,2,FLOAT,A
MaxP2CurDem=4,266,2,FLOAT,A
MaxP3CurDem=4,268,2,FLOAT,A
L1L2VoltTHD=4,334,2,FLOAT,%%
L2L3VoltTHD=4,336,2,FLOAT,%%
L3L1VoltTHD=4,338,2,FLOAT,%%
AverageLVoltTHD=4,340,2,FLOAT,%%

[MOD/T3P10]
#modbus definitions for the TEMCO PT100 device
#adress,length,type,unit
serial=3,1,4,INT4,-
FWVersion=3,5,1,BYTE,-
SWVersion=3,6,1,BYTE,-
MODBUSID=3,7,1,BYTE,-
PRODUCT=3,8,1,BYTE,-
HW=3,9,1,BYTE,-
BAUD=3,10,1,BYTE,-
HWCAL=3,13,1,BYTE,-
MODBUSINTFLOAT=3,14,1,BYTE,-
RESOLUTION=3,19,1,BYTE,-
PT1=3,101,2,FLOAT,Grad
PT2=3,103,2,FLOAT,Grad
PT3=3,105,2,FLOAT,Grad
PT4=3,107,2,FLOAT,Grad
PT5=3,109,2,FLOAT,Grad
PT6=3,111,2,FLOAT,Grad
PT7=3,113,2,FLOAT,Grad
PT8=3,115,2,FLOAT,Grad
PT9=3,117,2,FLOAT,Grad
PT10=3,119,2,FLOAT,Grad
TIME=3,131,6,BYTEA,time
OFFSET=3,141,20,BYTES,-
CALIBRATION=3,161,8,INT,-
RTD1=3,169,6,BYTES,-
RTD2=3,175,6,BYTE,-
RTD3=3,181,6,BYTE,-
RTD4=3,187,6,BYTE,-
RTD5=3,193,6,BYTE,-
RTD6=3,199,6,BYTE,-
RTD7=3,205,6,BYTE,-
RTD8=3,211,6,BYTE,-
RTD9=3,217,6,BYTE,-
RT10=3,223,6,BYTE,-
RANGE1=3,229,1,BYTE,-
RANGE2=3,230,1,BYTE,-
RANGE3=3,231,1,BYTE,-
RANGE4=3,232,1,BYTE,-
RANGE5=3,233,1,BYTE,-
RANGE6=3,234,1,BYTE,-
RANGE7=3,235,1,BYTE,-
RANGE8=3,236,1,BYTE,-
RANGE9=3,237,1,BYTE,-
RANGE10=3,238,1,BYTE,-
FILTER1=3,239,1,BYTE,-
FILTER2=3,240,1,BYTE,-
FILTER3=3,241,1,BYTE,-
FILTER4=3,242,1,BYTE,-
FILTER5=3,243,1,BYTE,-
FILTER6=3,244,1,BYTE,-
FILTER7=3,245,1,BYTE,-
FILTER8=3,246,1,BYTE,-
FILTER9=3,247,1,BYTE,-
FILTER10=3,248,1,BYTE,-

#-------------------------------------------------------
#
# Hier die Timerdefinitionen:
# zunaechst mit timer/name die namen der Timer:
# die timerdefinitionen besteht aus:
#   seconds, minutes, hours definieren Zeitspannen
#   timestring definiert den Zeitstring der unterschiedlich sein musz fuer die Archivwerte.
#
# danach wird definiert auf welchen Rechnern und welche Datenpunkt mit welchen Timern ausgefuehrt wird:
#
#

[timer/tenseconds]
seconds = 10

[timer/timerViertelstunde]
minutes = 15

[timer/Minute]
minutes = 1

[timer/twoMinutes]
minutes = 2

[timer/timerEnergy]
minutes = 15

[timer/tenMinutes]
minutes = 10

[timer/daily]
timestring="%%m %%d %%Y"

[kellerRaspi/timer]
Minute=ALIAS/PVTotal, ALIAS/PVHaus, ALIAS/PVSauna, ALIAS/SchwimmFilter, ALIAS/SchwimmSolar, ETH/kellerschalter,
       MOD/ttyUSB0/2/ZAEHLER/SystemPower,MOD/ttyUSB0/2/ZAEHLER/P1Power,
       MOD/ttyUSB0/2/ZAEHLER/P2Power,MOD/ttyUSB0/2/ZAEHLER/P3Power,
       MOD/ttyUSB0/3/ZAEHLER/SystemPower,MOD/ttyUSB0/3/ZAEHLER/P1Power,
       MOD/ttyUSB0/3/ZAEHLER/P2Power,MOD/ttyUSB0/3/ZAEHLER/P3Power,
       MOD/ttyUSB0/10/SDM120/Power

timerViertelstunde=ALIAS/DraussenTemp, ALIAS/BoilerTemp1, ALIAS/BoilerTemp2, ALIAS/BoilerTemp3, ALIAS/WohnzimmerTemp,PV/PV1/TOTAL_ENERGY,ETH/Kellerschalter/8,ETH/Wohnzimmer/V, PV/PV1/TOTAL_ENERGY

tenMinutes=MOD/ttyUSB0/2/ZAEHLER/ImportWh,MOD/ttyUSB0/2/ZAEHLER/ExportWh,
    MOD/ttyUSB0/3/ZAEHLER/ImportWh,MOD/ttyUSB0/3/ZAEHLER/ExportWh,
    MOD/ttyUSB0/10/SDM120/ImportWh,MOD/ttyUSB0/10/SDM120/ExportWh

[raspi/timer]
Minute=TEMP/00042cb564ff,TEMP/00042e5891ff,TEMP/00042d4001ff,TEMP/0004335731ff

twoMinutes=BX/BATTERX/1121,BX/BATTERX/1074,BX/BATTERX/1058,BX/BATTERX/1042,
       BX/BATTERX/353,BX/BATTERX/369,BX/BATTERX/1377,BX/BATTERX/1634,BX/BATTERX/2913,BX/BATTERX/2913/2

tenMinutes=HM/hmraspi/OEQ1694573/4/ACTUAL_TEMPERATURE, HM/hmraspi/NEQ1489656/4/ACTUAL_TEMPERATURE, MQTT/wasser/main/value

    
       
[zaehlerRaspi/timer]
Minute=ALIAS/ZAEHLERBILANZ,MOD/ttyUSB.modbus/1/ZAEHLER/SystemPower,
       MOD/ttyUSB.modbus/2/ZAEHLER/SystemPower,MOD/ttyUSB.modbus/1/ZAEHLER/P1Power,
       MOD/ttyUSB.modbus/1/ZAEHLER/P2Power,MOD/ttyUSB.modbus/1/ZAEHLER/P3Power,
       MOD/ttyUSB.modbus/2/ZAEHLER/P1Power,MOD/ttyUSB.modbus/2/ZAEHLER/P2Power,
       MOD/ttyUSB.modbus/2/ZAEHLER/P3Power,MOD/ttyUSB.modbus/10/SDM120/Power,
       MOD/ttyUSB.modbus/11/SDM120/Power,MOD/ttyUSB.modbus/12/SDM120/Power,
       MOD/ttyUSB.modbus/13/SDM120/Power,
       MOD/ttyUSB.modbus/14/SDM120/Power,MOD/ttyUSB.modbus/15/SDM120/Power,
       MOD/ttyUSB.modbus/16/SDM120/Power,MOD/ttyUSB.modbus/17/SDM120/Power,
       MOD/ttyUSB.modbus/18/SDM120/Power,MOD/ttyUSB.modbus/19/SDM120/Power
       
timerEnergy=DLMS/ttyUSB.irKopf/2.8.0,DLMS/ttyUSB.irKopf/1.8.0,DLMS/ttyUSB.irKopf/2.7.0,
       MOD/ttyUSB.modbus/2/ZAEHLER/P1Power,MOD/ttyUSB.modbus/2/ZAEHLER/P2Power,MOD/ttyUSB.modbus/2/ZAEHLER/P3Power,
       MOD/ttyUSB.modbus/1/ZAEHLER/P1Power,MOD/ttyUSB.modbus/1/ZAEHLER/P2Power,MOD/ttyUSB.modbus/1/ZAEHLER/P3Power,
       MOD/ttyUSB.modbus/1/ZAEHLER/ImportWh,MOD/ttyUSB.modbus/1/ZAEHLER/ExportWh
       
tenMinutes=MOD/ttyUSB.modbus/1/ZAEHLER/ImportWh,MOD/ttyUSB.modbus/1/ZAEHLER/ExportWh,
       MOD/ttyUSB.modbus/2/ZAEHLER/ImportWh,MOD/ttyUSB.modbus/2/ZAEHLER/ExportWh,
       MOD/ttyUSB.modbus/10/SDM120/ImportWh,MOD/ttyUSB.modbus/11/SDM120/ImportWh,
       MOD/ttyUSB.modbus/12/SDM120/ImportWh,MOD/ttyUSB.modbus/13/SDM120/ImportWh,
       MOD/ttyUSB.modbus/14/SDM120/ImportWh,MOD/ttyUSB.modbus/15/SDM120/ImportWh,
       MOD/ttyUSB.modbus/16/SDM120/ImportWh,MOD/ttyUSB.modbus/17/SDM120/ImportWh,
       MOD/ttyUSB.modbus/18/SDM120/ImportWh,MOD/ttyUSB.modbus/19/SDM120/ImportWh

daily=MOD/ttyUSB.modbus/10/SDM120/ImportWh,MOD/ttyUSB.modbus/11/SDM120/ImportWh,MOD/ttyUSB.modbus/12/SDM120/ImportWh,MOD/ttyUSB.modbus/13/SDM120/ImportWh,MOD/ttyUSB.modbus/14/SDM120/ImportWh,MOD/ttyUSB.modbus/15/SDM120/ImportWh,MOD/ttyUSB.modbus/16/SDM120/ImportWh,MOD/ttyUSB.modbus/17/SDM120/ImportWh,MOD/ttyUSB.modbus/18/SDM120/ImportWh,MOD/ttyUSB.modbus/19/SDM120/ImportWh

            
[teststatic]
staticsub1 = JSON:{"staticsub13": "testMain", "staticsub12": "testMain", "staticsub11": ["LISTtestMain1", "LISTtestMain2", "LISTtestMain3", "LISTtestMain4", "LISTtestMain5", "LISTtestMain6", "LISTtestMain7", "LISTtestMain8", "LISTtestMain9"]}
staticsub2 = JSON:{"staticsub23": "testMain", "staticsub21": "testMain", "staticsub22": "testMain"}
staticsub3 = JSON:{"staticsub31": "testMain", "staticsub32": "testMain"}
